name: Build and Push Docker Images

on:
  push:
    branches:
      - main # Cambia esto al branch que prefieras

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 3: Construir y subir imágenes para cada servicio
      - name: Build and Push Docker Images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          # Servicios a construir y subir
          SERVICES=("backend" "frontend")

          # Construir y subir imágenes para cada servicio
          for SERVICE in "${SERVICES[@]}"; do
            IMAGE_NAME="$DOCKER_USERNAME/$SERVICE"
            
            echo "Building and pushing image for $SERVICE..."
            
            # Construir la imagen
            docker build -t $IMAGE_NAME:${{ github.sha }} -t $IMAGE_NAME:latest ./$SERVICE
            
            # Subir la imagen
            docker push $IMAGE_NAME:${{ github.sha }}
            docker push $IMAGE_NAME:latest
          done

  deploy:
    # Este job se ejecutará una vez finalizado "build-and-push" correctamente
    needs: [build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: 157.245.132.144
          username: root
          password: Tesis123.Edutobi
          # Si usas un puerto distinto a 22, agrégalo así: port: 22
          script: |
            # Moverse al directorio donde tengas tu docker-compose.yml
            # Ajusta la ruta según tu Droplet
            cd /home  # <- Ejemplo: carpeta donde tengas tu docker-compose.yml

            # Traer las últimas imágenes (latest) que acabas de publicar
            docker-compose pull

            # Arrancar los contenedores (o actualizarlos si ya existían)
            docker-compose up -d --remove-orphans